(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{162:function(a,s,t){"use strict";t.r(s);var e=t(0),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"浏览器相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器相关"}},[a._v("#")]),a._v(" 浏览器相关")]),a._v(" "),t("h2",{attrs:{id:"_1-如何从一个url到打开浏览器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何从一个url到打开浏览器"}},[a._v("#")]),a._v(" 1.如何从一个url到打开浏览器")]),a._v(" "),t("h2",{attrs:{id:"_2-tcp-ip协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-tcp-ip协议"}},[a._v("#")]),a._v(" 2.TCP/IP协议")]),a._v(" "),t("h2",{attrs:{id:"_3-http协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-http协议"}},[a._v("#")]),a._v(" 3.HTTP协议")]),a._v(" "),t("h2",{attrs:{id:"_4-浏览器的存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器的存储"}},[a._v("#")]),a._v(" 4.浏览器的存储")]),a._v(" "),t("h3",{attrs:{id:"存储方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储方式"}},[a._v("#")]),a._v(" 存储方式")]),a._v(" "),t("h4",{attrs:{id:"cookie、localstorage、sessionstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie、localstorage、sessionstorage"}},[a._v("#")]),a._v(" cookie、localStorage、sessionStorage")]),a._v(" "),t("p",[a._v("cookie属于文档对象模型DOM树根节点document，\n而 sessionStorage 和 localStorage 属于浏览器对象模型BOM的对象window\nsessionStorage：为每一个给定的源（given origin）维持一个独立的存储区域，\n该存储区域在页面会话期间可用（即只要浏览器处于打开状态，包括页面重新加载和恢复）\nlocalStorage：同样的功能，但是在浏览器关闭，然后重新打开后数据仍然存在。")]),a._v(" "),t("h4",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[a._v("#")]),a._v(" cookie")]),a._v(" "),t("p",[a._v("h5之前，存储主要用cookies，缺点是在请求头上带着数据，导致流量增加。大小限制4k\n有过期时间")]),a._v(" "),t("h4",{attrs:{id:"localstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[a._v("#")]),a._v(" localStorage")]),a._v(" "),t("p",[a._v("以键值对(Key-Value)的方式存储，永久存储，永不失效，除非手动删除。IE8+支持，每个域名限制5M")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("window.localStorage.username = 'hehe'                   // 设置\nwindow.localStorage.setItem('username', 'hehe')         // 设置\nwindow.localStorage.getItem('username')                 // 读取\nwindow.localStorage.removeItem('username')             // 删除\nwindow.localStorage.key(1)                             // 读取索引为1的值\nwindow.localStorage.clear()                            // 清除所有\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h4",{attrs:{id:"sessionstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[a._v("#")]),a._v(" sessionStorage")]),a._v(" "),t("p",[a._v("sessionStorage操作的方法与localStroage是一样的，区别在于 sessionStorage 在关闭页面后即被清空，\n而 localStorage 则会一直保存。很多时候数据只需要在用户浏览一组页面期间使用，\n关闭窗口后数据就可以丢弃了，这种情况使用sessionStorage就比较方便。\n注意，刷新页面sessionStorage不会清除，但是打开同域新页面访问不到")]),a._v(" "),t("h2",{attrs:{id:"进程与线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程"}},[a._v("#")]),a._v(" 进程与线程")]),a._v(" "),t("h2",{attrs:{id:"render线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#render线程"}},[a._v("#")]),a._v(" render线程")]),a._v(" "),t("h2",{attrs:{id:"eventloop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eventloop"}},[a._v("#")]),a._v(" EventLoop")]),a._v(" "),t("h2",{attrs:{id:"宏任务和微任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#宏任务和微任务"}},[a._v("#")]),a._v(" 宏任务和微任务")])])}),[],!1,null,null,null);s.default=r.exports}}]);